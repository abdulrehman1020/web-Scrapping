{"ast":null,"code":"var _jsxFileName = \"/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/component/User/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../layout/Loader/Loader\";\nimport MetaData from \"../layout/MetaData\";\nimport FaceIcon from \"@mui/icons-material/Face\";\nimport MailOutlineIcon from \"@mui/icons-material/MailOutline\";\nimport { useAlert } from \"react-alert\";\nimport { clearErrors, loadUser, updateProfile } from \"../../actions/userAction\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userContstant\";\nimport \"./UpdateProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.profile);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState();\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\n\n  const updateProfileSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"avatar\", avatar);\n    dispatch(updateProfile(myForm));\n  };\n\n  const updateProfileDataChange = e => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Profile Updated Successfully\");\n      dispatch(loadUser());\n      navigate(\"/account\");\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n    }\n  }, [user, error, alert, dispatch, isUpdated, navigate]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaData, {\n        title: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateProfileContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateProfileBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"updateProfileHeading\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"updateProfileForm\",\n            encType: \"multipart/form-data\",\n            onSubmit: updateProfileSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"updateProfileName\",\n              children: [/*#__PURE__*/_jsxDEV(FaceIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                required: true,\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"updateProfileEmail\",\n              children: [/*#__PURE__*/_jsxDEV(MailOutlineIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                required: true,\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"updateProfileImage\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: avatarPreview,\n                alt: \"Avatar Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"avatar\",\n                accept: \"image/*\",\n                onChange: updateProfileDataChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Update\",\n              className: \"updateProfileBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfile, \"4Y6nVpTMN/nlyHAq2F47BpXGbv0=\", false, function () {\n  return [useDispatch, useAlert, useNavigate, useSelector, useSelector];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useDispatch","useSelector","Loader","MetaData","FaceIcon","MailOutlineIcon","useAlert","clearErrors","loadUser","updateProfile","useNavigate","UPDATE_PROFILE_RESET","UpdateProfile","dispatch","alert","navigate","user","state","error","isUpdated","loading","profile","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","updateProfileSubmit","e","preventDefault","myForm","FormData","set","updateProfileDataChange","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","url","success","type","value"],"sources":["/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/component/User/UpdateProfile.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../layout/Loader/Loader\";\nimport MetaData from \"../layout/MetaData\";\nimport FaceIcon from \"@mui/icons-material/Face\";\nimport MailOutlineIcon from \"@mui/icons-material/MailOutline\";\nimport { useAlert } from \"react-alert\";\nimport { clearErrors, loadUser, updateProfile } from \"../../actions/userAction\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userContstant\";\nimport \"./UpdateProfile.css\";\n\nconst UpdateProfile = () => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const navigate = useNavigate();\n\n  const { user } = useSelector((state) => state.user);\n  const { error, isUpdated, loading } = useSelector((state) => state.profile);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState();\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\n\n  const updateProfileSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"avatar\", avatar);\n    dispatch(updateProfile(myForm));\n  };\n\n  const updateProfileDataChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Profile Updated Successfully\");\n      dispatch(loadUser());\n\n      navigate(\"/account\");\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [user, error, alert, dispatch, isUpdated, navigate]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Update Profile\" />\n          <div className=\"updateProfileContainer\">\n            <div className=\"updateProfileBox\">\n              <h2 className=\"updateProfileHeading\">Update Profile</h2>\n\n              <form\n                className=\"updateProfileForm\"\n                encType=\"multipart/form-data\"\n                onSubmit={updateProfileSubmit}\n              >\n                <div className=\"updateProfileName\">\n                  <FaceIcon />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    required\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n                <div className=\"updateProfileEmail\">\n                  <MailOutlineIcon />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div id=\"updateProfileImage\">\n                  <img src={avatarPreview} alt=\"Avatar Preview\" />\n                  <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    accept=\"image/*\"\n                    onChange={updateProfileDataChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update\"\n                  className=\"updateProfileBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}