{"ast":null,"code":"var _jsxFileName = \"/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/component/Order/MyOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./MyOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaData from \"../layout/MetaData\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyOrders = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrder);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 100,\n    flex: 0.5\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 50,\n    flex: 0.5,\n    cellClassName: params => {\n      return params.getValue(params.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 50,\n    flex: 0.3\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/order/${params.getValue(params.id, \"id\")}`,\n        children: /*#__PURE__*/_jsxDEV(LaunchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach((item, index) => {\n    rows.push({\n      itemsQty: item.orderItems.length,\n      id: item._id,\n      status: item.orderStatus,\n      amount: item.totalPrice\n    });\n  });\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `${user.name} - Orders`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myOrdersPage\",\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        disableSelectionOnClick: true,\n        className: \"myOrdersTable\",\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"myOrdersHeading\",\n        children: [user.name, \"'s Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyOrders, \"ExGMrMw54xlsQf2kCgUTLXJgjGI=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n\n_c = MyOrders;\nexport default MyOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","myOrders","Loader","Link","useAlert","Typography","MetaData","LaunchIcon","MyOrders","dispatch","alert","loading","error","orders","state","myOrder","user","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","id","type","sortable","renderCell","rows","forEach","item","index","push","itemsQty","orderItems","length","_id","status","orderStatus","amount","totalPrice","name"],"sources":["/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/component/Order/MyOrders.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./MyOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaData from \"../layout/MetaData\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\n\nconst MyOrders = () => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { loading, error, orders } = useSelector((state) => state.myOrder);\n  const { user } = useSelector((state) => state.user);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 100, flex: 0.5 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 50,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 50,\n      flex: 0.3,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Link to={`/order/${params.getValue(params.id, \"id\")}`}>\n            <LaunchIcon />\n          </Link>\n        );\n      },\n    },\n  ];\n  const rows = [];\n\n  orders &&\n    orders.forEach((item, index) => {\n      rows.push({\n        itemsQty: item.orderItems.length,\n        id: item._id,\n        status: item.orderStatus,\n        amount: item.totalPrice,\n      });\n    });\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n\n  return (\n    <Fragment>\n      <MetaData title={`${user.name} - Orders`} />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"myOrdersPage\">\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"myOrdersTable\"\n            autoHeight\n          />\n\n          <Typography id=\"myOrdersHeading\">{user.name}'s Orders</Typography>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MyOrders;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}