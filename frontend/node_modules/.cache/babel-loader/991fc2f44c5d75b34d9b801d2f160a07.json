{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, ALL_ORDERS_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, CLEAR_ERRORS } from \"../constants/orderConstant\";\nimport axios from \"axios\"; // Create Order\n\nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/order/new`, order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // My Orders\n\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/orders/me`);\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get All Orders --- Admin\n\nexport const getAllOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/orders`);\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Order\n\nexport const updateOrder = (id, order) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/order/${id}`, order, config);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delte Order\n\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/order/${id}`);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get Order Details\n\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/order/${id}`);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","axios","createOrder","order","dispatch","type","config","headers","data","post","payload","error","response","message","myOrders","get","orders","getAllOrders","updateOrder","id","put","success","deleteOrder","delete","getOrderDetails","clearErrors"],"sources":["/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/actions/orderAction.js"],"sourcesContent":["import {\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_FAIL,\n  MY_ORDERS_REQUEST,\n  MY_ORDERS_SUCCESS,\n  MY_ORDERS_FAIL,\n  ALL_ORDERS_REQUEST,\n  ALL_ORDERS_SUCCESS,\n  ALL_ORDERS_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/orderConstant\";\nimport axios from \"axios\";\n\n// Create Order\n\nexport const createOrder = (order) => async (dispatch) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(`/api/v1/order/new`, order, config);\n\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// My Orders\n\nexport const myOrders = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/v1/orders/me`);\n\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders,\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get All Orders --- Admin\n\nexport const getAllOrders = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/v1/admin/orders`);\n\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data.orders,\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Order\n\nexport const updateOrder = (id, order) => async (dispatch) => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/order/${id}`,\n      order,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delte Order\n\nexport const deleteOrder = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST,\n    });\n\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get Order Details\n\nexport const getOrderDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/v1/order/${id}`);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clear Errors\n\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}