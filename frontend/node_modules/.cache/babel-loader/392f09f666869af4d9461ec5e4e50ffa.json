{"ast":null,"code":"var _jsxFileName = \"/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/component/Admin/UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_USER_RESET } from \"../../constants/userContstant\";\nimport { getUserDetails, updateUser, clearErrors } from \"../../actions/userAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    loading,\n    error,\n    user\n  } = useSelector(state => state.userDetails);\n  const {\n    loading: updateLoading,\n    error: updateError,\n    isUpdated\n  } = useSelector(state => state.profile);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const userId = id;\n  useEffect(() => {\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"User Updated Successfully\");\n      navigate(\"/admin/users\");\n      dispatch({\n        type: UPDATE_USER_RESET\n      });\n    }\n  }, [dispatch, alert, error, navigate, isUpdated, updateError, user, userId]);\n\n  const updateUserSubmitHandler = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"role\", role);\n    dispatch(updateUser(userId, myForm));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newProductContainer\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"createProductForm\",\n          onSubmit: updateUserSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Update User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              required: true,\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MailOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              required: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: role,\n              onChange: e => setRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"User\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"createProductBtn\",\n            type: \"submit\",\n            disabled: updateLoading ? true : false || role === \"\" ? true : false,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUser, \"cExfHr1P9FAuPmpYGPLa2AVd+/E=\", false, function () {\n  return [useDispatch, useAlert, useNavigate, useParams, useSelector, useSelector];\n});\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useNavigate","useParams","useSelector","useDispatch","useAlert","Button","MetaData","MailOutlineIcon","PersonIcon","VerifiedUserIcon","SideBar","UPDATE_USER_RESET","getUserDetails","updateUser","clearErrors","Loader","UpdateUser","dispatch","alert","navigate","id","loading","error","user","state","userDetails","updateLoading","updateError","isUpdated","profile","name","setName","email","setEmail","role","setRole","userId","_id","success","type","updateUserSubmitHandler","e","preventDefault","myForm","FormData","set","target","value"],"sources":["/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/component/Admin/UpdateUser.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport SideBar from \"./Sidebar\";\nimport { UPDATE_USER_RESET } from \"../../constants/userContstant\";\nimport {\n  getUserDetails,\n  updateUser,\n  clearErrors,\n} from \"../../actions/userAction\";\nimport Loader from \"../layout/Loader/Loader\";\n\nconst UpdateUser = () => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const { loading, error, user } = useSelector((state) => state.userDetails);\n\n  const {\n    loading: updateLoading,\n    error: updateError,\n    isUpdated,\n  } = useSelector((state) => state.profile);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const userId = id;\n\n  useEffect(() => {\n    if (user && user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setRole(user.role);\n    }\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (updateError) {\n      alert.error(updateError);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"User Updated Successfully\");\n      navigate(\"/admin/users\");\n      dispatch({ type: UPDATE_USER_RESET });\n    }\n  }, [dispatch, alert, error, navigate, isUpdated, updateError, user, userId]);\n\n  const updateUserSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"role\", role);\n\n    dispatch(updateUser(userId, myForm));\n  };\n\n  return (\n    <Fragment>\n      <MetaData title=\"Update User\" />\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"newProductContainer\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <form\n              className=\"createProductForm\"\n              onSubmit={updateUserSubmitHandler}\n            >\n              <h1>Update User</h1>\n\n              <div>\n                <PersonIcon />\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  required\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div>\n                <MailOutlineIcon />\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <VerifiedUserIcon />\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\n                  <option value=\"\">Choose Role</option>\n                  <option value=\"Admin\">Admin</option>\n                  <option value=\"User\">User</option>\n                </select>\n              </div>\n\n              <Button\n                id=\"createProductBtn\"\n                type=\"submit\"\n                disabled={\n                  updateLoading ? true : false || role === \"\" ? true : false\n                }\n              >\n                Update\n              </Button>\n            </form>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}