{"ast":null,"code":"import { legacy_createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { newProductReducer, newReviewReducer, productDetailsReducer, productReducer, productReviewsReducer, productsReducer, reviewReducer } from \"./reducers/productReducer\";\nimport { allUsersReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from \"./reducers/userReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { allOrdersReducer, myOrderReducer, newOrderReducer, orderDetailsReducer, orderReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  user: userReducer,\n  profile: profileReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrder: myOrderReducer,\n  orderDetails: orderDetailsReducer,\n  newReview: newReviewReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    shippingInfo: localStorage.getItem(\"shippingInfo\") ? JSON.parse(localStorage.getItem(\"shippingInfo\")) : {}\n  }\n};\nconst middleware = [thunk];\nconst store = legacy_createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["legacy_createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","newProductReducer","newReviewReducer","productDetailsReducer","productReducer","productReviewsReducer","productsReducer","reviewReducer","allUsersReducer","forgotPasswordReducer","profileReducer","userDetailsReducer","userReducer","cartReducer","allOrdersReducer","myOrderReducer","newOrderReducer","orderDetailsReducer","orderReducer","reducer","products","productDetails","user","profile","forgotPassword","cart","newOrder","myOrder","orderDetails","newReview","newProduct","product","allOrders","order","allUsers","userDetails","productReviews","review","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"sources":["/home/abdul-rehman/Downloads/MERN_E-Commerce-main/frontend/src/store.js"],"sourcesContent":["import { legacy_createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  newProductReducer,\n  newReviewReducer,\n  productDetailsReducer,\n  productReducer,\n  productReviewsReducer,\n  productsReducer,\n  reviewReducer,\n} from \"./reducers/productReducer\";\nimport {\n  allUsersReducer,\n  forgotPasswordReducer,\n  profileReducer,\n  userDetailsReducer,\n  userReducer,\n} from \"./reducers/userReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {\n  allOrdersReducer,\n  myOrderReducer,\n  newOrderReducer,\n  orderDetailsReducer,\n  orderReducer,\n} from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  user: userReducer,\n  profile: profileReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrder: myOrderReducer,\n  orderDetails: orderDetailsReducer,\n  newReview: newReviewReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  allOrders: allOrdersReducer,\n  order: orderReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer,\n});\n\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n    shippingInfo: localStorage.getItem(\"shippingInfo\")\n      ? JSON.parse(localStorage.getItem(\"shippingInfo\"))\n      : {},\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = legacy_createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,eAA7B,EAA8CC,eAA9C,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,cAJF,EAKEC,qBALF,EAMEC,eANF,EAOEC,aAPF,QAQO,2BARP;AASA,SACEC,eADF,EAEEC,qBAFF,EAGEC,cAHF,EAIEC,kBAJF,EAKEC,WALF,QAMO,wBANP;AAOA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,YALF,QAMO,yBANP;AAQA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;EAC9BuB,QAAQ,EAAEd,eADoB;EAE9Be,cAAc,EAAElB,qBAFc;EAG9BmB,IAAI,EAAEV,WAHwB;EAI9BW,OAAO,EAAEb,cAJqB;EAK9Bc,cAAc,EAAEf,qBALc;EAM9BgB,IAAI,EAAEZ,WANwB;EAO9Ba,QAAQ,EAAEV,eAPoB;EAQ9BW,OAAO,EAAEZ,cARqB;EAS9Ba,YAAY,EAAEX,mBATgB;EAU9BY,SAAS,EAAE3B,gBAVmB;EAW9B4B,UAAU,EAAE7B,iBAXkB;EAY9B8B,OAAO,EAAE3B,cAZqB;EAa9B4B,SAAS,EAAElB,gBAbmB;EAc9BmB,KAAK,EAAEf,YAduB;EAe9BgB,QAAQ,EAAE1B,eAfoB;EAgB9B2B,WAAW,EAAExB,kBAhBiB;EAiB9ByB,cAAc,EAAE/B,qBAjBc;EAkB9BgC,MAAM,EAAE9B;AAlBsB,CAAD,CAA/B;AAqBA,IAAI+B,YAAY,GAAG;EACjBb,IAAI,EAAE;IACJc,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;IAIJG,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADU,GAEV;EANA;AADW,CAAnB;AAWA,MAAMI,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AAEA,MAAM+C,KAAK,GAAGlD,kBAAkB,CAC9BuB,OAD8B,EAE9BmB,YAF8B,EAG9BtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAHW,CAAhC;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}